#!/usr/bin/env bash

# fail hard
set -o pipefail
# fail harder
set -eu

source "$(dirname "$BASH_SOURCE")/_util/include/manifest.sh"

OUT_PREFIX=$1

dep_formula=${0#$WORKSPACE_DIR/}
dep_name=$(basename "$BASH_SOURCE")
dep_build=${dep_formula#"${dep_name}-"}
dep_version=${dep_build%%+*} # strip build metadata off the end of the version
dep_package=${dep_name}-${dep_build}
dep_manifest=${dep_package}.composer.json

echo "-----> Packaging ${dep_name} (${dep_version})..."

# for PHP-min and Composer
export PATH="${OUT_PREFIX}/bin:$PATH"

base_path="$(dirname "$BASH_SOURCE")/../.."

tempdir=$(mktemp -d)

# let Composer package up what we need (based on exclude rules in composer.json key "archive")
composer -d "$base_path" archive --dir="$tempdir" --file=archive --format=tar

# wipe OUT_PREFIX (it contains PHP and Composer)
rm -rf "$OUT_PREFIX"
mkdir "$OUT_PREFIX"

tar -x -C "$OUT_PREFIX" -f "${tempdir}/archive.tar"

MANIFEST_REQUIRE="${MANIFEST_REQUIRE:-"{\"heroku-sys/apache\": \"*\", \"heroku-sys/nginx\": \"*\"}"}"
MANIFEST_CONFLICT="${MANIFEST_CONFLICT:-"{}"}"
MANIFEST_REPLACE="${MANIFEST_REPLACE:-"{}"}"
MANIFEST_PROVIDE="${MANIFEST_PROVIDE:-"{}"}"
MANIFEST_EXTRA="${MANIFEST_EXTRA:-"{}"}"

python $(dirname $BASH_SOURCE)/_util/include/manifest.py "heroku-sys-program" "heroku-sys/${dep_name}" "$dep_build" "${dep_formula}.tar.gz" "$MANIFEST_REQUIRE" "$MANIFEST_CONFLICT" "$MANIFEST_REPLACE" "$MANIFEST_PROVIDE" "$MANIFEST_EXTRA" > $dep_manifest

print_or_export_manifest_cmd "$(generate_manifest_cmd "$dep_manifest")"
