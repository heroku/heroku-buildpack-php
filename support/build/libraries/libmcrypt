#!/bin/bash
# Build Path: /app/.heroku/php/

# fail hard
set -o pipefail
# fail harder
set -eu

source $(dirname $BASH_SOURCE)/../_util/include/manifest.sh

OUT_PREFIX=$1

dep_formula=${0#$WORKSPACE_DIR/}
dep_name=$(basename $BASH_SOURCE)
dep_version=${dep_formula##*"/${dep_name}-"}
dep_package=pkg-${dep_name}-${dep_version}
dep_dirname=${dep_name}-${dep_version}
dep_archive_name=${dep_dirname}.tar.gz
dep_url=https://downloads.sourceforge.net/project/mcrypt/Libmcrypt/${dep_version}/${dep_archive_name}
dep_manifest=${dep_package}.composer.json

# skip build if already present
needed=( libmcrypt4 )
missing=$(comm -1 -3 <(dpkg-query -W -f '${package}\n' | sort) <(IFS=$'\n'; echo "${needed[*]}" | sort))

if [[ "$missing" ]]; then
	echo "-----> Building ${dep_package}..."

	curl -L ${dep_url} | tar xz

	pushd ${dep_dirname}
	./configure --disable-posix-threads --prefix=${OUT_PREFIX}
	make -s -j 9
	make install-strip -s
	popd

	rm -rf ${OUT_PREFIX}/man
else
	echo "-----> System ${dep_name} available, creating empty package..."
fi

python $(dirname $BASH_SOURCE)/../_util/include/manifest.py "heroku-sys-package" "heroku-sys/pkg-${dep_name}" "$dep_version" "${dep_formula}.tar.gz" > $dep_manifest

print_or_export_manifest_cmd "$(generate_manifest_cmd "$dep_manifest")"
