#!/bin/bash
# Build Path: /app/.heroku/php/

# fail hard
set -o pipefail
# fail harder
set -eu

source $(dirname $BASH_SOURCE)/../_util/include/manifest.sh

OUT_PREFIX=$1

dep_formula=${0#$WORKSPACE_DIR/}
dep_name=$(basename $BASH_SOURCE)
dep_version=${dep_formula##*"/${dep_name}-"}
dep_package=pkg-${dep_name}-${dep_version}
dep_dirname=imap-${dep_version}
dep_archive_name=${dep_dirname}.tar.gz
dep_url=ftp://ftp.cac.washington.edu/imap/${dep_archive_name}
dep_manifest=${dep_package}.composer.json

echo "-----> Building ${dep_package}..."

# IMAP
apt-get install -y libpam0g-dev || { echo "Failed to install libpam0g-dev; this build cannot run in a dyno; are you running this in a Docker build?"; exit 1; }

curl -L ${dep_url} | tar xz

pushd ${dep_dirname}
touch ip6 # so we do not get prompted
make ldb EXTRACFLAGS=-fPIC # need PIC so relocations work in the shared imap.so ext later
mkdir -p ${OUT_PREFIX}/opt/${dep_dirname}/include ${OUT_PREFIX}/opt/${dep_dirname}/lib
cp c-client/*.h ${OUT_PREFIX}/opt/${dep_dirname}/include
cp c-client/*.c ${OUT_PREFIX}/opt/${dep_dirname}/lib
cp c-client/*.a ${OUT_PREFIX}/opt/${dep_dirname}/lib
strip --strip-unneeded ${OUT_PREFIX}/opt/${dep_dirname}/lib/*.a
popd

python $(dirname $BASH_SOURCE)/../_util/include/manifest.py "heroku-sys-package" "heroku-sys/pkg-${dep_name}" "$dep_version" "${dep_formula}.tar.gz" > $dep_manifest

print_or_export_manifest_cmd "$(generate_manifest_cmd "$dep_manifest")"
