#!/bin/bash

# fail hard
set -o pipefail
# fail harder
set -eu

source $(dirname $BASH_SOURCE)/../_util/include/manifest.sh

OUT_PREFIX=$1

dep_formula=${0#$WORKSPACE_DIR/}
dep_name=$(basename $BASH_SOURCE)
dep_version=${dep_formula##*"/${dep_name}-"}
dep_package=${dep_name}-${dep_version}
dep_dirname=librdkafka-${dep_version}
dep_archive_name=v${dep_version}.tar.gz
dep_url=https://github.com/edenhill/librdkafka/archive/${dep_archive_name}
dep_manifest=${dep_package}.composer.json

# we need libsasl2-dev
needed=( libsasl2-dev )
missing=$(comm -1 -3 <(dpkg-query -W -f '${package}\n' | sort) <(IFS=$'\n'; echo "${needed[*]}" | sort))
if [[ "$missing" ]]; then
	apt-get update -qq || { echo "Failed to 'apt-get update'. You must build this formula using Docker."; exit 1; }
	apt-get install -q -y $missing
fi

echo "-----> Building ${dep_package}..."

curl -L ${dep_url} | tar xz
pushd ${dep_dirname}
./configure --prefix=${OUT_PREFIX}
make -s -j9
make install -s
rm ${OUT_PREFIX}/lib/*.a
find ${OUT_PREFIX} -type f \( -executable -o -name '*.a' \) -exec sh -c "file -i '{}' | grep -Eq 'application/x-(archive|(pie-)?executable|sharedlib); charset=binary'" \; -print | xargs strip --strip-unneeded
popd

ABI_VERSION=$(soname_version ${OUT_PREFIX}/lib/librdkafka.so)
echo
echo "ABI version is: ${ABI_VERSION}"
echo

python $(dirname $BASH_SOURCE)/../_util/include/manifest.py "heroku-sys-library" "heroku-sys/${dep_name}" "$dep_version" "${dep_formula}.tar.gz" "{}" "{}" "{}" "{\"heroku-sys/librdkafka-abi\":\"${ABI_VERSION}\"}" > $dep_manifest

print_or_export_manifest_cmd "$(generate_manifest_cmd "$dep_manifest")"
