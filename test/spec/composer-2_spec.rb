require_relative "spec_helper"

describe "A PHP application intended for Composer 2" do
	context "with a composer.lock generated by version 2.2 of Composer" do
		it "builds using Composer 2.2" do
			new_app_with_stack_and_platrepo('test/fixtures/composer/basic_lock_v2lts').deploy do |app|
				expect(app.output).to match(/- composer \(2\.2\./)
				expect(app.output).to match(/Composer version 2\.2\./)
			end
		end
	end
	context "with a composer.lock generated by version 2.3 of Composer" do
		before(:all) do
			@app = new_app_with_stack_and_platrepo('test/fixtures/composer/basic_lock_v2')
			@app.deploy
		end
		
		after(:all) do
			@app.teardown!
		end
		
		it "builds using Composer 2.3 or later" do
			expect(@app.output).to match(/- composer \(2\.([3-9]|\d{2,})\./)
			expect(@app.output).to match(/Composer version 2\.([3-9]|\d{2,}\.)/)
		end
		
		context "with a malformed COMPOSER_AUTH env var" do
			it "still boots" do
				# config test is enough, it's past any uses of composer on startup
				cmds = ['heroku-php-apache2', 'heroku-php-nginx'].map { |script| "#{script} -t" }
				retry_until retry: 3, sleep: 5 do
					expect_exit(code: 0) { @app.run("( set -e; #{cmds.join('; ')}; )", :return_obj => true, :heroku => {:env => "COMPOSER_AUTH=malformed"}) }
				end
			end
		end
	end
	context "with a composer.lock generated by a future version 2 of Composer" do
		it "builds using Composer 2.3 or later" do
			new_app_with_stack_and_platrepo('test/fixtures/composer/basic_lock_v2.999').deploy do |app|
				expect(app.output).to match(/- composer \(2\.([3-9]|\d{2,})\./)
				expect(app.output).to match(/Composer version 2\.([3-9]|\d{2,}\.)/)
			end
		end
	end
	context "with only an index.php" do
		it "builds using Composer 2.2" do
			new_app_with_stack_and_platrepo('test/fixtures/default').deploy do |app|
				expect(app.output).to match(/- composer \(2\.2\./)
				expect(app.output).to match(/Composer version 2\.2\./)
			end
		end
	end
end
