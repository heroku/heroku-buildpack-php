version: 2.1
jobs:
  hatchet:
    parameters:
      stack:
        type: enum
        enum: ["heroku-18", "heroku-20", "heroku-22"]
    docker:
      - image: cimg/ruby:2.7
    working_directory: /mnt/ramdisk/project
    environment:
      STACK: << parameters.stack >>
      HEROKU_DISABLE_AUTOUPDATE: 1
      HATCHET_RETRIES: 3
      IS_RUNNING_ON_CI: true
      HATCHET_APP_LIMIT: 200
      HATCHET_EXPENSIVE_MODE: 1
      HATCHET_BUILDPACK_BASE: https://github.com/heroku/heroku-buildpack-php
      HATCHET_BUILDPACK_BRANCH: << pipeline.git.revision >>
    steps:
      - run:
          name: Install Bundler
          command: gem install bundler --version="~> 1"
      - run:
          name: Update apt
          command: sudo apt-get update
      - run:
          name: Install Python
          command: sudo apt-get install python
      - run:
          name: Install PHP
          command: sudo apt-get install php-cli
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('sha384', 'composer-setup.php') === file_get_contents('https://composer.github.io/installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
            sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer --version=2.4.2
            rm composer-setup.php
      - checkout
      - run:
          name: Install Gems
          command: bundle install
      - run:
          name: Set up Hatchet (which will set up Heroku CLI)
          command: bundle exec hatchet ci:setup
      - run:
          name: Export HATCHET_APP_PREFIX
          command: echo 'export HATCHET_APP_PREFIX="htcht-${CIRCLE_BUILD_NUM}-"' >> $BASH_ENV
      - when:
          condition:
            not:
              or:
                - equal: [ main, << pipeline.git.branch >> ]
                - << pipeline.git.tag >>
          steps:
            - run: 
                name: Export HEROKU_PHP_PLATFORM_REPOSITORIES to â€¦-develop (since we are not building main or a tag)
                command: echo 'export HEROKU_PHP_PLATFORM_REPOSITORIES="- https://lang-php.s3.us-east-1.amazonaws.com/dist-${STACK}-develop/"' >> $BASH_ENV
      - run:
          name: Execute tests
          command: bundle exec parallel_rspec -n 16 --group-by runtime --unknown-runtime 1 --allowed-missing 100 --runtime-log "test/var/log/parallel_runtime_rspec.${STACK}.log" --verbose-process-command --combine-stderr --prefix-output-with-test-env-number test/spec/
      - run:
          name: Clean up test apps
          command: bundle exec hatchet destroy --all
          when: always
      - run:
          name: Print parallel_runtime_rspec.log
          command: cat parallel_runtime_rspec.log | grep -E '^test/spec/[a-z0-9_/\.-]+\.rb:[0-9]+\.[0-9]+$' | sort
env:
workflows:
  version: 2.1
  default-ci-workflow:
    jobs:
      - hatchet:
          matrix:
            parameters:
              stack: ["heroku-18", "heroku-20", "heroku-22"]
          filters:
            tags:
              only: /^v\d+$/
